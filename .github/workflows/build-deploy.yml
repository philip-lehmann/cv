# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  ci:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.6.1]

    steps:
      - uses: actions/checkout@v4
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules
      - name: Cache .yarn
        id: cache-dot-yarn
        uses: actions/cache@v3
        with:
          path: .yarn
          key: ${{ runner.os }}-dot-yarn
      - name: Cache .eslintcache
        id: cache-dot-eslintcache
        uses: actions/cache@v3
        with:
          path: .eslintcache
          key: ${{ runner.os }}-dot-eslintcache
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          always-auth: true
          registry-url: https://npm.pkg.github.com
          scope: "@datage-ch"
      - name: install dependencies
        run: |
          npm install -g yarn
          yarn install
      - name: lint
        run: yarn lint
      - name: build
        if: github.ref != 'refs/heads/main'
        run: yarn build

  build:
    runs-on: self-hosted
    needs: ci
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          install: true
          endpoint: builders
      - name: Login to harbor.riwi.dev registry
        uses: docker/login-action@v2
        with:
          registry: harbor.riwi.dev
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: set version
        run: echo "TAG_VERSION=$(date +'%y-%m-%d').$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          push: true
          cache-from: type=registry,ref=harbor.riwi.dev/philiplehmann/cv:buildcache
          cache-to: type=registry,ref=harbor.riwi.dev/philiplehmann/cv:buildcache,mode=max,image-manifest=true
          tags: |
            harbor.riwi.dev/philiplehmann/cv:latest
            harbor.riwi.dev/philiplehmann/cv:${{ env.TAG_VERSION }}
  
  deploy:
    runs-on: self-hosted
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: set version
        run: echo "TAG_VERSION=$(date +'%y-%m-%d').$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
      - name: git pull
        run: |
          git pull --rebase
      - uses: imranismail/setup-kustomize@v2
      - name: set image tag
        run: |
          cd kustomize/cv
          kustomize edit set image harbor.riwi.dev/philiplehmann/cv=harbor.riwi.dev/philiplehmann/cv:${{ env.TAG_VERSION }}
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: Set image tag to `${{ env.TAG_VERSION }}`